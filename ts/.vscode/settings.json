{
  "deno.config": "./deno.json",
  "deno.importMap": "./import_map.json",
  "deno.suggest.imports.hosts": {
    "https://deno.land": false
  },
  // Obs: add no settings default : checar se faz efeito globla:
  // /*  VARIAVEIS DE AMBIENTE PARA EXTENSAO CLIENT_HTTP #PORT_SERVER */
  // "rest-client.environmentVariables": {
  //   "Local Env": {
  //     "host": "http://localhost:8000"
  //   }
  // }, //
  // Settings: Profile >> Typescript : esses sets >> sobrepoem o settings default
  "workbench.colorTheme": "Dracula Theme", // Theme in use
  "editor.formatOnSave": true, // Este é Global: Formatar ao salvar - arquivos.
  // deseja que sejam específicas para este projeto/workspace:
  "editor.tabSize": 2, // Exemplo: se este projeto exige 2 espaços
  // BY LINGUAGES : (o que quiser dentro delas)
  "deno.enable": true, // Habilita a extensão Deno
  "deno.lint": true, // Habilita o linter do Deno
  // Configura o Deno para ser o formatador padrão para arquivos Deno
  // Normalmente a extensão Deno fará isso automaticamente quando "deno.enable" for true,
  // mas você pode ser explícito:
  "[typescript]": {
    "editor.defaultFormatter": "denoland.vscode-deno",
    "editor.formatOnSave": true, // Formata ao salvar - arquivos deste escopo.
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "denoland.vscode-deno",
    "editor.formatOnSave": true, // Formata ao salvar - arquivos deste escopo.
  },
  "[javascript]": {
    "editor.defaultFormatter": "denoland.vscode-deno",
    "editor.formatOnSave": true, // Formata ao salvar - arquivos deste escopo.
    "javascript.preferences.quoteStyle": "single", // Aspas simples para JS
    "javascript.validate.enable": false, // Desabilitar validação JS nativa (se usar linter externo)
    "javascript.updateImportsOnFileMove.enabled": "always",
    "javascript.suggest.autoImports": true
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "denoland.vscode-deno",
    "editor.formatOnSave": true, // Formata ao salvar - arquivos deste escopo.		
  },
  // Ts
  "typescript.tsserver.log": "off",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.suggest.autoImports": true,
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true // Formata ao salvar - arquivos deste escopo.
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true // Formata ao salvar - arquivos deste escopo.
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true // Formata ao salvar - arquivos deste escopo.
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true // Formata ao salvar - arquivos deste escopo.
  },
  "[scss]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true // Formata ao salvar - arquivos deste escopo.
  },
  // BD
  "[prisma]": {
    "editor.formatOnSave": true
  },
  // Libs
  // Console Ninja -- [infos >> ](https://g.co/gemini/share/9dce9d26e0c5)
  "console-ninja.featureSet": "Community",
  "console-ninja.toolsToEnableSupportAutomaticallyFor": {
    "live-server-extension": true,
    "live-preview-extension": true
  }//
}